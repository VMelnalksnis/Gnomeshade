<UserControl
	xmlns="https://github.com/avaloniaui"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:transactions="clr-namespace:Gnomeshade.Avalonia.Core.Transactions;assembly=Gnomeshade.Avalonia.Core"
	xmlns:design="clr-namespace:Gnomeshade.Avalonia.Core.DesignTime;assembly=Gnomeshade.Avalonia.Core"
	xmlns:interactivity="clr-namespace:Gnomeshade.Avalonia.Core.Interactivity;assembly=Gnomeshade.Avalonia.Core"
	mc:Ignorable="d" d:DesignWidth="1920" d:DesignHeight="600"
	d:DataContext="{x:Static design:DesignTimeData.TransactionViewModel}"
	x:Class="Gnomeshade.Desktop.Views.Transactions.TransactionView"
	x:DataType="transactions:TransactionViewModel">

	<Grid RowDefinitions="*" ColumnDefinitions="Auto,Auto,Auto,Auto,*" x:Name="Container">
		<Expander Grid.Column="0" ExpandDirection="Right" VerticalAlignment="Stretch" IsExpanded="True">
			<StackPanel Orientation="Vertical" Spacing="5">
				<UserControl Content="{Binding Filter, Mode=OneWay}" />

				<Grid ColumnDefinitions="*, *" RowDefinitions="Auto, 5, Auto, Auto, Auto">
					<Button
						Grid.Row="0" Grid.Column="0"
						HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"
						IsEnabled="{Binding CanRefresh}" Command="{Binding RefreshAsync}">
						Refresh
					</Button>
					<Button
						Grid.Row="0" Grid.Column="1" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"
						IsEnabled="{Binding CanDelete}" Command="{Binding DeleteSelectedAsync}">
						Delete Selected
					</Button>
					<Button
						Grid.Row="2" Grid.Column="0"
						HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"
						IsEnabled="{Binding CanSelectSource}" Command="{Binding SelectSource}">
						Select Source
					</Button>
					<Button
						Grid.Row="2" Grid.Column="1" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"
						IsEnabled="{Binding CanSelectTarget}" Command="{Binding SelectTarget}">
						Select Target
					</Button>
					<Button
						Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2"
						HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"
						Command="{Binding ClearMerge}">
						Clear
					</Button>
					<Button
						Grid.Row="4" Grid.Column="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"
						IsEnabled="{Binding Merge.CanMerge}" Command="{Binding Merge.MergeAsync}">
						Merge
					</Button>
					<Button
						Grid.Row="4" Grid.Column="1" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"
						IsEnabled="{Binding Refund.CanRefund}" Command="{Binding Refund.RefundAsync}">
						Refund
					</Button>
				</Grid>
			</StackPanel>
		</Expander>

		<Grid Grid.Column="2" ColumnDefinitions="*" RowDefinitions="*, Auto">
			<DataGrid
				Grid.Row="0"
				x:Name="DataGrid"
				VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
				VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible"
				ItemsSource="{Binding DataGridView, Mode=TwoWay}"
				SelectedItem="{Binding Selected, Mode=TwoWay}" SelectionMode="Single"
				AutoGenerateColumns="False" IsReadOnly="False"
				CanUserReorderColumns="False" CanUserResizeColumns="True" CanUserSortColumns="True">
				<DataGrid.Columns>
					<DataGridTemplateColumn Header="Rec" IsReadOnly="True" CanUserSort="False">
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate DataType="transactions:TransactionOverview">
								<LayoutTransformControl HorizontalAlignment="Center" VerticalAlignment="Top">
									<CheckBox IsChecked="{Binding Reconciled}" Padding="0" IsEnabled="False" />
									<LayoutTransformControl.LayoutTransform>
										<ScaleTransform ScaleX="0.6" ScaleY="0.6" />
									</LayoutTransformControl.LayoutTransform>
								</LayoutTransformControl>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>
					<DataGridTemplateColumn
						Header="Date" IsReadOnly="True"
						SortMemberPath="Date" CanUserSort="True">
						<DataTemplate DataType="transactions:TransactionOverview">
							<TextBlock
								HorizontalAlignment="Right" VerticalAlignment="Top"
								Margin="5 0"
								Text="{Binding Date, Mode=OneWay, StringFormat=\{0:g\}}" />
						</DataTemplate>
					</DataGridTemplateColumn>
					<DataGridTemplateColumn CanUserSort="False" IsReadOnly="True" IsVisible="{Binding ShowUserCurrency}">
						<DataTemplate DataType="transactions:TransactionOverview">
							<ItemsControl Margin="0 1" ItemsSource="{Binding Transfers, Mode=OneWay}">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<StackPanel Orientation="Vertical" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate DataType="transactions:TransferSummary">
										<TextBlock Text="{Binding UserCurrency}" />
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</DataTemplate>
					</DataGridTemplateColumn>
					<DataGridTemplateColumn CanUserSort="False" IsReadOnly="True">
						<DataTemplate DataType="transactions:TransactionOverview">
							<ItemsControl Margin="0 1" ItemsSource="{Binding Transfers, Mode=OneWay}">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<StackPanel Orientation="Vertical" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate DataType="transactions:TransferSummary">
										<TextBlock
											HorizontalAlignment="Right" VerticalAlignment="Top"
											Margin="5 0"
											Text="{Binding UserAmount, Mode=OneWay, StringFormat=\{0:N2\}}" />
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</DataTemplate>
					</DataGridTemplateColumn>
					<DataGridTemplateColumn CanUserSort="False" IsReadOnly="True">
						<DataTemplate DataType="transactions:TransactionOverview">
							<ItemsControl Margin="0 1" ItemsSource="{Binding Transfers, Mode=OneWay}">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<StackPanel Orientation="Vertical" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate DataType="transactions:TransferSummary">
										<TextBlock Text="{Binding UserAccount}" Padding="0 0 5 0" />
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</DataTemplate>
					</DataGridTemplateColumn>
					<DataGridTemplateColumn CanUserResize="False" CanUserSort="False" IsReadOnly="True">
						<DataTemplate DataType="transactions:TransactionOverview">
							<ItemsControl Margin="0 1" ItemsSource="{Binding Transfers, Mode=OneWay}">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<StackPanel Orientation="Vertical" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate DataType="transactions:TransferSummary">
										<TextBlock Text="{Binding Direction}" Padding="0 0 5 0" />
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</DataTemplate>
					</DataGridTemplateColumn>
					<DataGridTemplateColumn CanUserSort="False" IsReadOnly="True">
						<DataTemplate DataType="transactions:TransactionOverview">
							<ItemsControl Margin="0 1" ItemsSource="{Binding Transfers, Mode=OneWay}">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<StackPanel Orientation="Vertical" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate DataType="transactions:TransferSummary">
										<TextBlock Text="{Binding DisplayedAccount}" Padding="0 0 5 0" />
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</DataTemplate>
					</DataGridTemplateColumn>
					<DataGridTemplateColumn CanUserSort="False" IsReadOnly="True" IsVisible="{Binding ShowOtherAmount}">
						<DataTemplate DataType="transactions:TransactionOverview">
							<ItemsControl Margin="0 1" ItemsSource="{Binding Transfers, Mode=OneWay}">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<StackPanel Orientation="Vertical" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate DataType="transactions:TransferSummary">
										<TextBlock
											Text="{Binding OtherCurrency, Mode=OneWay}"
											IsVisible="{Binding DisplayTarget}"
											Padding="0 0 5 0" />
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</DataTemplate>
					</DataGridTemplateColumn>
					<DataGridTemplateColumn CanUserSort="False" IsReadOnly="True" IsVisible="{Binding ShowOtherAmount}">
						<DataTemplate DataType="transactions:TransactionOverview">
							<ItemsControl Margin="0 1" ItemsSource="{Binding Transfers, Mode=OneWay}">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<StackPanel Orientation="Vertical" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate DataType="transactions:TransferSummary">
										<TextBlock
											HorizontalAlignment="Right" VerticalAlignment="Top"
											Margin="5 0" IsVisible="{Binding DisplayTarget}"
											Text="{Binding OtherAmount, Mode=OneWay, StringFormat=\{0:N2\}}" />
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</DataTemplate>
					</DataGridTemplateColumn>
				</DataGrid.Columns>

				<Interaction.Behaviors>
					<EventTriggerBehavior EventName="SelectionChanged" SourceObject="{Binding #DataGrid}">
						<InvokeCommandAction Command="{Binding UpdateSelection}" />
					</EventTriggerBehavior>
				</Interaction.Behaviors>
			</DataGrid>

			<UserControl Grid.Row="1" Content="{Binding Summary}" />
		</Grid>

		<GridSplitter Grid.Column="3">
			<Interaction.Behaviors>
				<interactivity:ElementDoubleTappedTrigger>
					<!-- Grid splitter changes sets a specific Width instead of Auto, this resets it -->
					<ChangePropertyAction
						TargetObject="{Binding #Container.ColumnDefinitions[2]}"
						PropertyName="Width" Value="{x:Static GridLength.Auto}" />
				</interactivity:ElementDoubleTappedTrigger>
			</Interaction.Behaviors>
		</GridSplitter>

		<UserControl Grid.Column="4" Content="{Binding Details}" />
	</Grid>
</UserControl>
