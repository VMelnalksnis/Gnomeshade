name: Nightly Release

on:
  push:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        os: [ windows-latest ]
        runtime: [ win10-x64 ]
        framework: [ net6.0-windows ]
        project: [ source/Gnomeshade.Interfaces.Desktop/Gnomeshade.Interfaces.Desktop.csproj ]
        archive_command: [ "7z a -mx9 -r gnomeshade_desktop_win-x64.zip" ]
        directory: [ source/Gnomeshade.Interfaces.Desktop/bin/Release/net6.0-windows/win10-x64/publish ]
        artifact: [ "**/win10-x64/publish/gnomeshade_desktop_win-x64.zip" ]
        include:
          - os: ubuntu-latest
            runtime: linux-x64
            framework: [ net6.0 ]
            project: source/Gnomeshade.Interfaces.WebApi/Gnomeshade.Interfaces.WebApi.csproj
            archive_command: zip -r -9 gnomeshade_linux-x64.zip . -x \*.json
            directory: source/Gnomeshade.Interfaces.WebApi/bin/Release/net6.0/linux-x64/publish
            artifact: "**/linux-x64/publish/gnomeshade_linux-x64.zip"

          - os: ubuntu-latest
            runtime: linux-x64
            framework: [ net6.0 ]
            project: source/Gnomeshade.Interfaces.Desktop/Gnomeshade.Interfaces.Desktop.csproj
            archive_command: zip -r -9 gnomeshade_desktop_linux-x64.zip .
            directory: source/Gnomeshade.Interfaces.Desktop/bin/Release/net6.0/linux-x64/publish
            artifact: "**/linux-x64/publish/gnomeshade_desktop_linux-x64.zip"

    name: Build
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Publish project
        if: matrix.os == 'ubuntu-latest'
        run: >
          dotnet
          publish
          ${{ matrix.project }}
          --runtime ${{ matrix.runtime }}
          --framework ${{ matrix.framework }}
          --configuration Release
          --self-contained true
          -p:PublishSingleFile=true
          -p:VersionPrefix=0.1.0
          -p:VersionSuffix=nightly
          -p:AssemblyVersion=0.1.0.${GITHUB_RUN_NUMBER}
          -p:InformationalVersion=0.1.0-nightly+sha.${GITHUB_SHA}.${{ matrix.runtime }}

      - name: Publish project
        if: matrix.os == 'windows-latest'
        run: >
          dotnet
          publish
          ${{ matrix.project }}
          --runtime ${{ matrix.runtime }}
          --framework ${{ matrix.framework }}
          --configuration Release
          --self-contained true
          -p:PublishSingleFile=true
          -p:VersionPrefix=0.1.0
          -p:VersionSuffix=nightly
          -p:AssemblyVersion=0.1.0.$Env:GITHUB_RUN_NUMBER
          -p:InformationalVersion=0.1.0-nightly+sha.$Env:GITHUB_SHA.${{ matrix.runtime }}

      - name: Archive published artifacts
        run: ${{ matrix.archive_command }}
        working-directory: ${{ matrix.directory }}

      - name: Upload artifact to realease
        uses: pyTooling/Actions/releaser/composite@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: nightly
          rm: false
          files: |
            ${{ matrix.artifact }}
