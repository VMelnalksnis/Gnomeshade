name: build and test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    name: Build and test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Run Unit Tests
        run: dotnet test --filter FullyQualifiedName!~Integration -p:CollectCoverage=true -p:CoverletOutput=TestResults/ -p:CoverletOutputFormat=opencover --configuration Release --no-build --verbosity normal

      - name: Run Integration Tests
        run: dotnet test --filter FullyQualifiedName~Integration -p:CollectCoverage=true -p:CoverletOutput=TestResults/ -p:CoverletOutputFormat=opencover -p:BuildInParallel=false -m:1 --configuration Release --no-build --verbosity normal
        env:
          ConnectionStrings:FinanceDb: "Server = localhost; Database = finance_tests; Port = 5432; User Id = postgres; Password = postgres;"
          ConnectionStrings:IdentityDb: "Server = localhost; Database = finance_identity; Port = 5432; User Id = postgres; Password = postgres;"
          AuthenticatedUser:Username: "Foo"
          AuthenticatedUser:Password: "Bar"

      - name: Gather Code Coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true
